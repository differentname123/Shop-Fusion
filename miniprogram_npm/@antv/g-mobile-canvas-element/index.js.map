{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nvar EventEmitter = require('eventemitter3');\n\nvar CanvasElement = /** @class */ (function () {\n    function CanvasElement(ctx) {\n        this.isCanvasElement = true;\n        this.emitter = new EventEmitter();\n        this.context = ctx;\n        // 有可能是 node canvas 创建的 context 对象\n        var canvas = ctx.canvas || {};\n        this.width = canvas.width || 0;\n        this.height = canvas.height || 0;\n    }\n    CanvasElement.prototype.getContext = function (contextId, contextAttributes) {\n        return this.context;\n    };\n    CanvasElement.prototype.getBoundingClientRect = function () {\n        var width = this.width;\n        var height = this.height;\n        // 默认都处理成可视窗口的顶部位置\n        return {\n            top: 0,\n            right: width,\n            bottom: height,\n            left: 0,\n            width: width,\n            height: height,\n            x: 0,\n            y: 0,\n        };\n    };\n    CanvasElement.prototype.addEventListener = function (type, listener, options) {\n        // TODO: implement options\n        this.emitter.on(type, listener);\n    };\n    CanvasElement.prototype.removeEventListener = function (type, listener, options) {\n        this.emitter.off(type, listener);\n    };\n    /**\n     * @see https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget-dispatchEvent\n     */\n    CanvasElement.prototype.dispatchEvent = function (e) {\n        this.emitter.emit(e.type, e);\n        return true;\n    };\n    return CanvasElement;\n}());\nfunction supportEventListener(canvas) {\n    if (!canvas) {\n        return false;\n    }\n    // 非 HTMLCanvasElement\n    if (canvas.nodeType !== 1 ||\n        !canvas.nodeName ||\n        canvas.nodeName.toLowerCase() !== 'canvas') {\n        return false;\n    }\n    // 微信小程序canvas.getContext('2d')时也是CanvasRenderingContext2D\n    // 也会有ctx.canvas, 而且nodeType也是1，所以还要在看下是否支持addEventListener\n    var support = false;\n    try {\n        canvas.addEventListener('eventTest', function () {\n            support = true;\n        });\n        canvas.dispatchEvent(new Event('eventTest'));\n    }\n    catch (error) {\n        support = false;\n    }\n    return support;\n}\nfunction createMobileCanvasElement(ctx) {\n    if (!ctx) {\n        return null;\n    }\n    if (supportEventListener(ctx.canvas)) {\n        return ctx.canvas;\n    }\n    return new CanvasElement(ctx);\n}\n\nexports.createMobileCanvasElement = createMobileCanvasElement;\n//# sourceMappingURL=index.js.map\n"]}